#if defined(JEXPOSE_CREATOR_REQUIRED)

#define JCLASS(CLASS) inline std::vector<std::string> Get##CLASS##RequiredAttributes()\
{\
	std::vector<std::string> requiredAtts;
#define JTYPE(TYPE,VALUE)
#define JEXPOSE(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) requiredAtts.push_back(#ATT);
#define JEXPOSE_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) requiredAtts.push_back(#ATT);
#define JEXPOSE_ENUM(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) requiredAtts.push_back(#ATT);
#define JEXPOSE_VECTOR(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) requiredAtts.push_back(#ATT);
#define JEXPOSE_VECTOR_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) requiredAtts.push_back(#ATT);
#define JEXPOSE_SET(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) requiredAtts.push_back(#ATT);
#define JEXPOSE_MAP_TRANSFORM(KEYTYPE,VALUETYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) requiredAtts.push_back(#ATT);
#define JTRACKUUID(CLASS,NAME,LIMIT,COND)

#endif

#if defined(JEXPOSE_CREATOR_JSON_DECL)

#define JCLASS(CLASS) nlohmann::json Create##CLASS##Json();
#define JTYPE(TYPE,VALUE)
#define JEXPOSE(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_ENUM(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_VECTOR(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_VECTOR_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_SET(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_MAP_TRANSFORM(KEYTYPE,VALUETYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JTRACKUUID(CLASS,NAME,LIMIT,COND)

#endif

#if defined(JEXPOSE_CREATOR_JSON_DEF)

#define JCLASS(CLASS) nlohmann::json Create##CLASS##Json()\
{\
	nlohmann::json created;

#define JTYPE(TYPE,VALUE)

#define JEXPOSE(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) \
	if(REQUIREDTOCREATE)\
	{\
		created[#ATT] = INITIAL;\
	}

#define JEXPOSE_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)\
	if(REQUIREDTOCREATE)\
	{\
		created[#ATT] = FROMTYPE(INITIAL);\
	}

#define JEXPOSE_ENUM(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) \
	if(REQUIREDTOCREATE)\
	{\
		created[#ATT] = TYPE##ToString.at(INITIAL);\
	}

#define JEXPOSE_VECTOR(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)\
	if(REQUIREDTOCREATE)\
	{\
		created[#ATT] = nlohmann::json::array();\
		std::vector<TYPE> vec = std::vector<TYPE>(INITIAL);\
		for (auto& v : vec)\
		{\
			created[#ATT].push_back(v);\
		}\
	}

#define JEXPOSE_VECTOR_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)\
	if(REQUIREDTOCREATE)\
	{\
		created[#ATT] = nlohmann::json::array();\
		std::vector<TYPE> vec = std::vector<TYPE>(INITIAL);\
		for (auto& v : vec)\
		{\
			created[#ATT].push_back(FROMTYPE(v));\
		}\
	}

#define JEXPOSE_SET(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)\
	if(REQUIREDTOCREATE)\
	{\
		created[#ATT] = nlohmann::json::array();\
		std::vector<TYPE> vec = std::vector<TYPE>(INITIAL);\
		std::set<TYPE> iterableSet(vec.begin(),vec.end());\
		for (auto& v : iterableSet)\
		{\
			created[#ATT].push_back(v);\
		}\
	}

#define JEXPOSE_MAP_TRANSFORM(KEYTYPE,VALUETYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)\
	if(REQUIREDTOCREATE)\
	{\
		created[#ATT] = nlohmann::json::object({}); \
		std::map<KEYTYPE,VALUETYPE> mapKV(INITIAL);\
		for (auto& pair : mapKV)\
		{\
			created[#ATT].merge_patch(FROMTYPE(pair)); \
		}\
	}

#define JTRACKUUID(CLASS,NAME,LIMIT,COND)

#endif

#if defined(JEXPOSE_CREATOR_DRAWERS_DECL)

#define JCLASS(CLASS) std::map<std::string, JEdvCreatorDrawerFunction> Get##CLASS##CreatorDrawers();
#define JTYPE(TYPE,VALUE)
#define JEXPOSE(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) 
#define JEXPOSE_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_ENUM(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_VECTOR(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_VECTOR_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_SET(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_MAP_TRANSFORM(KEYTYPE,VALUETYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JTRACKUUID(CLASS,NAME,LIMIT,COND)

#endif

#if defined(JEXPOSE_CREATOR_DRAWERS_DEF)

#define JCLASS(CLASS) std::map<std::string, JEdvCreatorDrawerFunction> Get##CLASS##CreatorDrawers()\
{\
	std::map<std::string, JEdvCreatorDrawerFunction> creatorDrawers;
#define JTYPE(TYPE,VALUE)
#define JEXPOSE(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorDrawers.insert_or_assign(#ATT, DrawCreatorValue<TYPE,JEDVALUETYPE>());
#define JEXPOSE_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorDrawers.insert_or_assign(#ATT, DrawCreatorValue<TYPE,JEDVALUETYPE>());
#define JEXPOSE_ENUM(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorDrawers.insert_or_assign(#ATT, DrawCreatorEnum<TYPE,JEDVALUETYPE>(TYPE##ToString,StringTo##TYPE));
#define JEXPOSE_VECTOR(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorDrawers.insert_or_assign(#ATT, DrawCreatorVector<TYPE,JEDVALUETYPE>());
#define JEXPOSE_VECTOR_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorDrawers.insert_or_assign(#ATT, DrawCreatorVector<TYPE,JEDVALUETYPE>());
#define JEXPOSE_SET(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorDrawers.insert_or_assign(#ATT, nullptr); //do it when you need it
#define JEXPOSE_MAP_TRANSFORM(KEYTYPE,VALUETYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorDrawers.insert_or_assign(#ATT, DrawCreatorMap<KEYTYPE,VALUETYPE>());
#define JTRACKUUID(CLASS,NAME,LIMIT,COND)

#endif

#if defined(JEXPOSE_CREATOR_VALIDATOR_DECL)

#define JCLASS(CLASS) std::map<std::string, JEdvCreatorValidatorFunction> Get##CLASS##CreatorValidator();
#define JTYPE(TYPE,VALUE)
#define JEXPOSE(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) 
#define JEXPOSE_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_ENUM(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_VECTOR(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_VECTOR_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_SET(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JEXPOSE_MAP_TRANSFORM(KEYTYPE,VALUETYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE)
#define JTRACKUUID(CLASS,NAME,LIMIT,COND)

#endif

#if defined(JEXPOSE_CREATOR_VALIDATOR_DEF)

#define JCLASS(CLASS) std::map<std::string, JEdvCreatorValidatorFunction> Get##CLASS##CreatorValidator()\
{\
	std::map<std::string, JEdvCreatorValidatorFunction> creatorValidator;
#define JTYPE(TYPE,VALUE)
#define JEXPOSE(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorValidator.insert_or_assign(#ATT, CreatorValidValue<TYPE,JEDVALUETYPE>());
#define JEXPOSE_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorValidator.insert_or_assign(#ATT, CreatorValidValue<TYPE,JEDVALUETYPE>());
#define JEXPOSE_ENUM(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorValidator.insert_or_assign(#ATT, CreatorValidEnum<TYPE,JEDVALUETYPE>(TYPE##ToString,StringTo##TYPE));
#define JEXPOSE_VECTOR(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorValidator.insert_or_assign(#ATT, CreatorValidVector<TYPE,JEDVALUETYPE>());
#define JEXPOSE_VECTOR_TRANSFORM(TYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorValidator.insert_or_assign(#ATT, CreatorValidVector<TYPE,JEDVALUETYPE>());
#define JEXPOSE_SET(TYPE,ATT,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorValidator.insert_or_assign(#ATT, nullptr); //do it when you need it
#define JEXPOSE_MAP_TRANSFORM(KEYTYPE,VALUETYPE,ATT,TOTYPE,FROMTYPE,INITIAL,JEDVALUETYPE,UPDATEMASK,REQUIREDTOCREATE) if(REQUIREDTOCREATE) creatorValidator.insert_or_assign(#ATT, CreatorValidMap<KEYTYPE,VALUETYPE>());
#define JTRACKUUID(CLASS,NAME,LIMIT,COND)

#endif
